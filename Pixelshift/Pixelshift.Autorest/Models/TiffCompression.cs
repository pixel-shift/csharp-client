// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Pixelshift.Autorest.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for TiffCompression.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum TiffCompression
    {
        [EnumMember(Value = "jpeg")]
        Jpeg,
        [EnumMember(Value = "deflate")]
        Deflate,
        [EnumMember(Value = "lzw")]
        Lzw,
        [EnumMember(Value = "ccittfax4")]
        Ccittfax4
    }
    internal static class TiffCompressionEnumExtension
    {
        internal static string ToSerializedValue(this TiffCompression? value)
        {
            return value == null ? null : ((TiffCompression)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this TiffCompression value)
        {
            switch( value )
            {
                case TiffCompression.Jpeg:
                    return "jpeg";
                case TiffCompression.Deflate:
                    return "deflate";
                case TiffCompression.Lzw:
                    return "lzw";
                case TiffCompression.Ccittfax4:
                    return "ccittfax4";
            }
            return null;
        }

        internal static TiffCompression? ParseTiffCompression(this string value)
        {
            switch( value )
            {
                case "jpeg":
                    return TiffCompression.Jpeg;
                case "deflate":
                    return TiffCompression.Deflate;
                case "lzw":
                    return TiffCompression.Lzw;
                case "ccittfax4":
                    return TiffCompression.Ccittfax4;
            }
            return null;
        }
    }
}
